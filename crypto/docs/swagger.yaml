basePath: /api/
definitions:
  workers.ExchangeRates:
    properties:
      currency:
        type: string
      rates:
        additionalProperties:
          type: number
        type: object
    type: object
host: localhost:80
info:
  contact:
    email: admin@yahyabatulu.com
    name: API Support
    url: http://github.com/ByPikod
  description: Simple crypto app back-end API for educational purposes.
  license:
    name: MIT
    url: https://www.mit.edu/~amini/LICENSE.md
  title: Go Crypto
  version: "1.0"
paths:
  /exchange-rates:
    get:
      consumes:
      - application/json
      description: List exchange rates
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/workers.ExchangeRates'
      security:
      - ApiKeyAuth: []
      summary: Exchange Rates
      tags:
      - wallet
  /user/login:
    post:
      consumes:
      - application/json
      description: Retrieves the token by credentials sent.
      parameters:
      - description: Mail address
        example: '"johndoe@example.com"'
        format: email
        in: body
        name: mail
        required: true
        schema:
          type: string
      - description: Password
        example: '"JoHnDoe123"'
        in: body
        maxLength: 256
        minLength: 8
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Login
      tags:
      - user
  /user/me:
    get:
      description: Retrieves the user data.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "401":
          description: Unauthorized
          schema:
            type: object
      security:
      - ApiKeyAuth: []
      summary: Login
      tags:
      - user
  /user/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: First name
        example: '"John"'
        in: body
        maxLength: 32
        minLength: 2
        name: name
        required: true
        schema:
          type: string
      - description: Last name
        example: '"Doe"'
        in: body
        maxLength: 32
        minLength: 2
        name: lastName
        required: true
        schema:
          type: string
      - description: Mail address
        example: '"johndoe@example.com"'
        format: email
        in: body
        name: mail
        required: true
        schema:
          type: string
      - description: Password
        example: '"JoHnDoe123"'
        in: body
        maxLength: 256
        minLength: 8
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Creates an account.
      tags:
      - user
  /user/wallet/balance:
    get:
      consumes:
      - application/json
      description: Retrieves the balance
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "401":
          description: Unauthorized
          schema:
            type: object
      security:
      - ApiKeyAuth: []
      summary: Balance
      tags:
      - wallet
  /user/wallet/buy:
    post:
      consumes:
      - application/json
      description: Buy a specific amount of crypto.
      parameters:
      - description: Amount of unit to buy.
        format: float
        in: body
        name: amount
        required: true
        schema:
          type: number
      - description: Currency to buy.
        in: body
        name: currency
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            type: object
        "401":
          description: Unauthorized
          schema:
            type: object
      security:
      - ApiKeyAuth: []
      summary: Buy
      tags:
      - wallet
  /user/wallet/deposit:
    post:
      consumes:
      - application/json
      description: Add balance to the user account.
      parameters:
      - description: Amount of money to deposit.
        format: float
        in: body
        name: amount
        required: true
        schema:
          type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            type: object
        "401":
          description: Unauthorized
          schema:
            type: object
      security:
      - ApiKeyAuth: []
      summary: Deposit
      tags:
      - wallet
  /user/wallet/sell:
    post:
      consumes:
      - application/json
      description: Sell a specific amount of crypto.
      parameters:
      - description: Amount of unit to sell.
        format: float
        in: body
        name: amount
        required: true
        schema:
          type: number
      - description: Currency to sell.
        in: body
        name: currency
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            type: object
        "401":
          description: Unauthorized
          schema:
            type: object
      security:
      - ApiKeyAuth: []
      summary: Sell
      tags:
      - wallet
  /user/wallet/withdraw:
    post:
      consumes:
      - application/json
      description: Withdraw money from your account.
      parameters:
      - description: Amount of money to withdraw.
        format: float
        in: body
        name: amount
        required: true
        schema:
          type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            type: object
        "401":
          description: Unauthorized
          schema:
            type: object
      security:
      - ApiKeyAuth: []
      summary: Withdraw
      tags:
      - wallet
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
