version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8085:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
    volumes:
      - ./kafka-ui.yml:/etc/kafkaui/dynamic_config.yaml
  postgres:
    image: postgres:14.1-alpine
    restart: always
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
    ports:
      - '5432:5432'
    volumes: 
      - postgres:/var/lib/postgresql/data
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/local-config.yaml
    volumes:
      - ./loki-config.yml:/local-config.yaml
  gocrypto:
    build:
      context: crypto  # The location of your Dockerfile (current directory in this case)
      dockerfile: dockerfile.dev
    container_name: gocrypto
    ports:
      - "80:80"
    depends_on:
      - kafka
      - postgres
      - loki
    environment:
      AUTH_SECRET: 32f97916299787f211b5111e6da178b1
      DB_HOST: "postgres"
      DB_PORT: 5432
      DB_USER: "postgres"
      DB_PASS: "root"
      DB_NAME: "gocrypto"
  notifier:
    build:
      context: notifier  # The location of your Dockerfile (current directory in this case)
      dockerfile: dockerfile.dev
    container_name: notifier
    depends_on:
      - kafka
      - loki
  swagger:
    container_name: swagger
    image: swaggerapi/swagger-ui
    ports:
      - "8080:8080"
    volumes:
      - ./crypto/docs/swagger.json:/swagger.json
    environment:
      - SWAGGER_JSON=/swagger.json
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-remote-write-receiver'
      - '--enable-feature=native-histograms'
    depends_on:
      - gocrypto
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=root
    volumes:
      - ./grafana.db:/var/lib/grafana/grafana.db
    depends_on:
      - prometheus
      - loki
  k6:
    image: grafana/k6:latest
    container_name: k6
    volumes:
      - ./scripts:/scripts
    environment:
      - K6_PROMETHEUS_RW_SERVER_URL=http://prometheus:9090/api/v1/write
      - K6_PROMETHEUS_RW_USERNAME=admin
      - K6_PROMETHEUS_RW_PASSWORD=admin12345
      - K6_PROMETHEUS_RW_TREND_AS_NATIVE_HISTOGRAM=true
    command: run -o experimental-prometheus-rw /scripts/loadtest.js
    depends_on:
      - prometheus
volumes:
  postgres:
    driver: local